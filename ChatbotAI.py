c√°ch s·ª≠ d·ª•ng trong code file ChatbotAI :
from fastapi import FastAPI, File, UploadFile
import whisper
import pyaudio
import wave
import os

app = FastAPI()

#"D:\Python\ffmpeg-2025-03-10-git-87e5da9067-full_build\bin" l√† ƒë∆∞·ªùng d·∫´n local g·ªëc ƒë·ªÉ s·ª≠ d·ª•ng ffmpeg cho vi·ªác ƒë·ªãnh d·∫°ng d·ªØ li·ªáu chuy·ªÉn ƒë·ªïi codec (audio)
os.environ["PATH"] += r";D:\Python\ffmpeg-2025-03-10-git-87e5da9067-full_build\bin"

# Load model Whisper ch·ªâ m·ªôt l·∫ßn khi kh·ªüi ƒë·ªông server
try:
    model = whisper.load_model("large")  # C√≥ th·ªÉ ƒë·ªïi th√†nh "base" n·∫øu c·∫ßn
    print("Model Whisper ƒë√£ t·∫£i xong!")
except Exception as e:
    print(f"L·ªói khi t·∫£i model: {e}")
    model = None  # Tr√°nh l·ªói khi truy c·∫≠p model n·∫øu ch∆∞a t·∫£i xong

# Ki·ªÉm tra API ƒëang ho·∫°t ƒë·ªông
@app.get("/health")
def health_check():
    return {"status": "API is running"}

# H√†m ghi √¢m v√† l∆∞u th√†nh file c·ªë ƒë·ªãnh
def record_audio(filename="D:\\Python\\record\\Uservoice.wav", duration=5, samplerate=16000):
    try:
        print("üé§ ƒêang ghi √¢m... H√£y n√≥i v√†o micro!")
        p = pyaudio.PyAudio()
        stream = p.open(format=pyaudio.paInt16, channels=1, rate=samplerate, input=True, frames_per_buffer=1024)
        frames = []

        for _ in range(0, int(samplerate / 1024 * duration)):
            data = stream.read(1024)
            frames.append(data)

        stream.stop_stream()
        stream.close()
        p.terminate()

        # L∆∞u v√†o file Uservoice.wav (ghi ƒë√®)
        with wave.open(filename, 'wb') as wf:
            wf.setnchannels(1)
            wf.setsampwidth(p.get_sample_size(pyaudio.paInt16))
            wf.setframerate(samplerate)
            wf.writeframes(b''.join(frames))

        print(f"‚úÖ Ghi √¢m xong! File l∆∞u t·∫°i: {filename}")
        return filename
    except Exception as e:
        print(f"L·ªói ghi √¢m: {e}")
        return None

# API Ghi √Çm v√† Nh·∫≠n Di·ªán VƒÉn B·∫£n
@app.get("/listen")
def listen():
    if model is None:
        return {"error": "Model Whisper ch∆∞a t·∫£i xong. Vui l√≤ng th·ª≠ l·∫°i!"}

    file_path = record_audio()
    if file_path is None:
        return {"error": "Kh√¥ng th·ªÉ ghi √¢m, vui l√≤ng ki·ªÉm tra micro!"}

    print("üìù ƒêang nh·∫≠n di·ªán gi·ªçng n√≥i...")
    result = model.transcribe(file_path, language="vi")  # Ch·ªâ ƒë·ªãnh ti·∫øng Vi·ªát

    if len(result["text"].strip()) < 5:
        return {"error": "√Çm thanh kh√¥ng r√µ, vui l√≤ng th·ª≠ l·∫°i ho·∫∑c t·∫£i file l√™n!"}

    return {"text": result["text"]}

# API Upload File ƒë·ªÉ nh·∫≠n di·ªán gi·ªçng n√≥i
@app.post("/transcribe")
def transcribe(file: UploadFile = File(...)):
    if model is None:
        return {"error": "Model Whisper ch∆∞a t·∫£i xong. Vui l√≤ng th·ª≠ l·∫°i!"}

    try:
        file_path = "D:\\Python\\record\\Uservoice.wav"  # Ghi ƒë√® l√™n file c≈©
        with open(file_path, "wb") as temp_audio:
            temp_audio.write(file.file.read())

        print(f"üìÇ File ƒë∆∞·ª£c t·∫£i l√™n: {file.filename}")
        result = model.transcribe(file_path, language="vi")  # Nh·∫≠n di·ªán ti·∫øng Vi·ªát
        return {"text": result["text"]}

    except Exception as e:
        return {"error": f"L·ªói x·ª≠ l√Ω file: {e}"}

# Ch·∫°y ghi √¢m khi ch·∫°y script
if __name__ == "__main__":
    file_path = record_audio(duration=10)  # Ghi √¢m trong 10 gi√¢y
    if file_path:
        print("üìù ƒêang nh·∫≠n di·ªán gi·ªçng n√≥i (Ti·∫øng Vi·ªát)...")
        result = model.transcribe(file_path, language="vi")
        print(f"üìú K·∫øt qu·∫£: {result['text']}")
    else:
        print("‚ùå Ghi √¢m th·∫•t b·∫°i!")
